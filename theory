- Strings
    - ASCII, Unicode
    - Как строки реализованы в вашем языке программирования (например, есть ли уних максимальная длина)
    - Поиск подстрок (например алгоритм Рабина-Карпа)
    - Регулярные выражения
- Arrays
    - Детали реализации в вашем языке программирования. Например, для С++
    нужно знать реализацию с помощью указателей, и вектор. Для вектора тоже
    нужно знать, например, то, что он периодически делает resize, и другие похожие
    детали.
- Linked lists
    - Singly linked list
    - Doubly linked list
- Stacks and Queues
- Trees
    - DFS, BFS
    - Adding and removing elements
    - Less common tree types (e.g., red black trees, B-trees) - what are they, how they
    differ from the binary trees, basic complexities, and how they are used. No need to
    know all the rotations in the RB-tree, for example.
    - Tries
- Heaps
    - Heap sort
    - Using heaps for tracking top-K
    - Allocating elements on a heap vs on a stack - what does it mean?
- Graphs
    - DFS, BFS
    - Topological search
    - Shortest path
- Hash
    - Hash functions
    - Universal hash
- Алгоритмы
    - Sorting
        - Especially make sure you know heapsort, mergesort and quicksort.
    - Searching
        - Binary search
        - Searching in linked lists, arrays, trees, graphs, dictionaries...
    - Dynamic programming
    - Greedy algorithms
    - Recursion


ASCII
128 chars from [0, 127], 7 bit
65 → 90, “A” → “Z”
97 → 122, “a” → “z”
ord(”a”) → 97
chr(97) → “a”


